// source: credential_issuer.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var error_pb = require('./error_pb.js');
goog.object.extend(proto, error_pb);
goog.exportSymbol('proto.openid4vci.CreateCredentialErrorResponseRequest', null, global);
goog.exportSymbol('proto.openid4vci.CreateCredentialErrorResponseResponse', null, global);
goog.exportSymbol('proto.openid4vci.CreateCredentialErrorResponseResponse.ResponseCase', null, global);
goog.exportSymbol('proto.openid4vci.CreateCredentialErrorResponseResponse.Success', null, global);
goog.exportSymbol('proto.openid4vci.CreateCredentialOfferRequest', null, global);
goog.exportSymbol('proto.openid4vci.CreateCredentialOfferResponse', null, global);
goog.exportSymbol('proto.openid4vci.CreateCredentialOfferResponse.ResponseCase', null, global);
goog.exportSymbol('proto.openid4vci.CreateCredentialOfferResponse.Success', null, global);
goog.exportSymbol('proto.openid4vci.CreateCredentialSuccessResponseRequest', null, global);
goog.exportSymbol('proto.openid4vci.CreateCredentialSuccessResponseResponse', null, global);
goog.exportSymbol('proto.openid4vci.CreateCredentialSuccessResponseResponse.ResponseCase', null, global);
goog.exportSymbol('proto.openid4vci.CreateCredentialSuccessResponseResponse.Success', null, global);
goog.exportSymbol('proto.openid4vci.EvaluateCredentialRequestRequest', null, global);
goog.exportSymbol('proto.openid4vci.EvaluateCredentialRequestResponse', null, global);
goog.exportSymbol('proto.openid4vci.EvaluateCredentialRequestResponse.ResponseCase', null, global);
goog.exportSymbol('proto.openid4vci.EvaluateCredentialRequestResponse.Success', null, global);
goog.exportSymbol('proto.openid4vci.PreEvaluateCredentialRequestRequest', null, global);
goog.exportSymbol('proto.openid4vci.PreEvaluateCredentialRequestResponse', null, global);
goog.exportSymbol('proto.openid4vci.PreEvaluateCredentialRequestResponse.ResponseCase', null, global);
goog.exportSymbol('proto.openid4vci.PreEvaluateCredentialRequestResponse.Success', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openid4vci.CreateCredentialOfferRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openid4vci.CreateCredentialOfferRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openid4vci.CreateCredentialOfferRequest.displayName = 'proto.openid4vci.CreateCredentialOfferRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openid4vci.CreateCredentialOfferResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.openid4vci.CreateCredentialOfferResponse.oneofGroups_);
};
goog.inherits(proto.openid4vci.CreateCredentialOfferResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openid4vci.CreateCredentialOfferResponse.displayName = 'proto.openid4vci.CreateCredentialOfferResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openid4vci.CreateCredentialOfferResponse.Success = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openid4vci.CreateCredentialOfferResponse.Success, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openid4vci.CreateCredentialOfferResponse.Success.displayName = 'proto.openid4vci.CreateCredentialOfferResponse.Success';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openid4vci.PreEvaluateCredentialRequestRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openid4vci.PreEvaluateCredentialRequestRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openid4vci.PreEvaluateCredentialRequestRequest.displayName = 'proto.openid4vci.PreEvaluateCredentialRequestRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openid4vci.PreEvaluateCredentialRequestResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.openid4vci.PreEvaluateCredentialRequestResponse.oneofGroups_);
};
goog.inherits(proto.openid4vci.PreEvaluateCredentialRequestResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openid4vci.PreEvaluateCredentialRequestResponse.displayName = 'proto.openid4vci.PreEvaluateCredentialRequestResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openid4vci.PreEvaluateCredentialRequestResponse.Success = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openid4vci.PreEvaluateCredentialRequestResponse.Success, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openid4vci.PreEvaluateCredentialRequestResponse.Success.displayName = 'proto.openid4vci.PreEvaluateCredentialRequestResponse.Success';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openid4vci.EvaluateCredentialRequestRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openid4vci.EvaluateCredentialRequestRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openid4vci.EvaluateCredentialRequestRequest.displayName = 'proto.openid4vci.EvaluateCredentialRequestRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openid4vci.EvaluateCredentialRequestResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.openid4vci.EvaluateCredentialRequestResponse.oneofGroups_);
};
goog.inherits(proto.openid4vci.EvaluateCredentialRequestResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openid4vci.EvaluateCredentialRequestResponse.displayName = 'proto.openid4vci.EvaluateCredentialRequestResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openid4vci.EvaluateCredentialRequestResponse.Success = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openid4vci.EvaluateCredentialRequestResponse.Success, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openid4vci.EvaluateCredentialRequestResponse.Success.displayName = 'proto.openid4vci.EvaluateCredentialRequestResponse.Success';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openid4vci.CreateCredentialSuccessResponseRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openid4vci.CreateCredentialSuccessResponseRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openid4vci.CreateCredentialSuccessResponseRequest.displayName = 'proto.openid4vci.CreateCredentialSuccessResponseRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openid4vci.CreateCredentialSuccessResponseResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.openid4vci.CreateCredentialSuccessResponseResponse.oneofGroups_);
};
goog.inherits(proto.openid4vci.CreateCredentialSuccessResponseResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openid4vci.CreateCredentialSuccessResponseResponse.displayName = 'proto.openid4vci.CreateCredentialSuccessResponseResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openid4vci.CreateCredentialSuccessResponseResponse.Success = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openid4vci.CreateCredentialSuccessResponseResponse.Success, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openid4vci.CreateCredentialSuccessResponseResponse.Success.displayName = 'proto.openid4vci.CreateCredentialSuccessResponseResponse.Success';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openid4vci.CreateCredentialErrorResponseRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openid4vci.CreateCredentialErrorResponseRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openid4vci.CreateCredentialErrorResponseRequest.displayName = 'proto.openid4vci.CreateCredentialErrorResponseRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openid4vci.CreateCredentialErrorResponseResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.openid4vci.CreateCredentialErrorResponseResponse.oneofGroups_);
};
goog.inherits(proto.openid4vci.CreateCredentialErrorResponseResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openid4vci.CreateCredentialErrorResponseResponse.displayName = 'proto.openid4vci.CreateCredentialErrorResponseResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.openid4vci.CreateCredentialErrorResponseResponse.Success = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.openid4vci.CreateCredentialErrorResponseResponse.Success, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.openid4vci.CreateCredentialErrorResponseResponse.Success.displayName = 'proto.openid4vci.CreateCredentialErrorResponseResponse.Success';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openid4vci.CreateCredentialOfferRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openid4vci.CreateCredentialOfferRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openid4vci.CreateCredentialOfferRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openid4vci.CreateCredentialOfferRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    issuerMetadata: msg.getIssuerMetadata_asB64(),
    credentials: msg.getCredentials_asB64(),
    credentialOfferEndpoint: jspb.Message.getFieldWithDefault(msg, 3, ""),
    authorizedCodeFlow: msg.getAuthorizedCodeFlow_asB64(),
    preAuthorizedCodeFlow: msg.getPreAuthorizedCodeFlow_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openid4vci.CreateCredentialOfferRequest}
 */
proto.openid4vci.CreateCredentialOfferRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openid4vci.CreateCredentialOfferRequest;
  return proto.openid4vci.CreateCredentialOfferRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openid4vci.CreateCredentialOfferRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openid4vci.CreateCredentialOfferRequest}
 */
proto.openid4vci.CreateCredentialOfferRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setIssuerMetadata(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setCredentials(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCredentialOfferEndpoint(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setAuthorizedCodeFlow(value);
      break;
    case 5:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setPreAuthorizedCodeFlow(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openid4vci.CreateCredentialOfferRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openid4vci.CreateCredentialOfferRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openid4vci.CreateCredentialOfferRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openid4vci.CreateCredentialOfferRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIssuerMetadata_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getCredentials_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBytes(
      4,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeBytes(
      5,
      f
    );
  }
};


/**
 * optional bytes issuer_metadata = 1;
 * @return {string}
 */
proto.openid4vci.CreateCredentialOfferRequest.prototype.getIssuerMetadata = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes issuer_metadata = 1;
 * This is a type-conversion wrapper around `getIssuerMetadata()`
 * @return {string}
 */
proto.openid4vci.CreateCredentialOfferRequest.prototype.getIssuerMetadata_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getIssuerMetadata()));
};


/**
 * optional bytes issuer_metadata = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getIssuerMetadata()`
 * @return {!Uint8Array}
 */
proto.openid4vci.CreateCredentialOfferRequest.prototype.getIssuerMetadata_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getIssuerMetadata()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.openid4vci.CreateCredentialOfferRequest} returns this
 */
proto.openid4vci.CreateCredentialOfferRequest.prototype.setIssuerMetadata = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bytes credentials = 2;
 * @return {string}
 */
proto.openid4vci.CreateCredentialOfferRequest.prototype.getCredentials = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes credentials = 2;
 * This is a type-conversion wrapper around `getCredentials()`
 * @return {string}
 */
proto.openid4vci.CreateCredentialOfferRequest.prototype.getCredentials_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getCredentials()));
};


/**
 * optional bytes credentials = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getCredentials()`
 * @return {!Uint8Array}
 */
proto.openid4vci.CreateCredentialOfferRequest.prototype.getCredentials_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getCredentials()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.openid4vci.CreateCredentialOfferRequest} returns this
 */
proto.openid4vci.CreateCredentialOfferRequest.prototype.setCredentials = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional string credential_offer_endpoint = 3;
 * @return {string}
 */
proto.openid4vci.CreateCredentialOfferRequest.prototype.getCredentialOfferEndpoint = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.openid4vci.CreateCredentialOfferRequest} returns this
 */
proto.openid4vci.CreateCredentialOfferRequest.prototype.setCredentialOfferEndpoint = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.openid4vci.CreateCredentialOfferRequest} returns this
 */
proto.openid4vci.CreateCredentialOfferRequest.prototype.clearCredentialOfferEndpoint = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openid4vci.CreateCredentialOfferRequest.prototype.hasCredentialOfferEndpoint = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bytes authorized_code_flow = 4;
 * @return {string}
 */
proto.openid4vci.CreateCredentialOfferRequest.prototype.getAuthorizedCodeFlow = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes authorized_code_flow = 4;
 * This is a type-conversion wrapper around `getAuthorizedCodeFlow()`
 * @return {string}
 */
proto.openid4vci.CreateCredentialOfferRequest.prototype.getAuthorizedCodeFlow_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getAuthorizedCodeFlow()));
};


/**
 * optional bytes authorized_code_flow = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getAuthorizedCodeFlow()`
 * @return {!Uint8Array}
 */
proto.openid4vci.CreateCredentialOfferRequest.prototype.getAuthorizedCodeFlow_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getAuthorizedCodeFlow()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.openid4vci.CreateCredentialOfferRequest} returns this
 */
proto.openid4vci.CreateCredentialOfferRequest.prototype.setAuthorizedCodeFlow = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.openid4vci.CreateCredentialOfferRequest} returns this
 */
proto.openid4vci.CreateCredentialOfferRequest.prototype.clearAuthorizedCodeFlow = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openid4vci.CreateCredentialOfferRequest.prototype.hasAuthorizedCodeFlow = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional bytes pre_authorized_code_flow = 5;
 * @return {string}
 */
proto.openid4vci.CreateCredentialOfferRequest.prototype.getPreAuthorizedCodeFlow = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * optional bytes pre_authorized_code_flow = 5;
 * This is a type-conversion wrapper around `getPreAuthorizedCodeFlow()`
 * @return {string}
 */
proto.openid4vci.CreateCredentialOfferRequest.prototype.getPreAuthorizedCodeFlow_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getPreAuthorizedCodeFlow()));
};


/**
 * optional bytes pre_authorized_code_flow = 5;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getPreAuthorizedCodeFlow()`
 * @return {!Uint8Array}
 */
proto.openid4vci.CreateCredentialOfferRequest.prototype.getPreAuthorizedCodeFlow_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getPreAuthorizedCodeFlow()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.openid4vci.CreateCredentialOfferRequest} returns this
 */
proto.openid4vci.CreateCredentialOfferRequest.prototype.setPreAuthorizedCodeFlow = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.openid4vci.CreateCredentialOfferRequest} returns this
 */
proto.openid4vci.CreateCredentialOfferRequest.prototype.clearPreAuthorizedCodeFlow = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openid4vci.CreateCredentialOfferRequest.prototype.hasPreAuthorizedCodeFlow = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.openid4vci.CreateCredentialOfferResponse.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.openid4vci.CreateCredentialOfferResponse.ResponseCase = {
  RESPONSE_NOT_SET: 0,
  SUCCESS: 1,
  ERROR: 2
};

/**
 * @return {proto.openid4vci.CreateCredentialOfferResponse.ResponseCase}
 */
proto.openid4vci.CreateCredentialOfferResponse.prototype.getResponseCase = function() {
  return /** @type {proto.openid4vci.CreateCredentialOfferResponse.ResponseCase} */(jspb.Message.computeOneofCase(this, proto.openid4vci.CreateCredentialOfferResponse.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openid4vci.CreateCredentialOfferResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openid4vci.CreateCredentialOfferResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openid4vci.CreateCredentialOfferResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openid4vci.CreateCredentialOfferResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    success: (f = msg.getSuccess()) && proto.openid4vci.CreateCredentialOfferResponse.Success.toObject(includeInstance, f),
    error: (f = msg.getError()) && error_pb.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openid4vci.CreateCredentialOfferResponse}
 */
proto.openid4vci.CreateCredentialOfferResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openid4vci.CreateCredentialOfferResponse;
  return proto.openid4vci.CreateCredentialOfferResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openid4vci.CreateCredentialOfferResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openid4vci.CreateCredentialOfferResponse}
 */
proto.openid4vci.CreateCredentialOfferResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.openid4vci.CreateCredentialOfferResponse.Success;
      reader.readMessage(value,proto.openid4vci.CreateCredentialOfferResponse.Success.deserializeBinaryFromReader);
      msg.setSuccess(value);
      break;
    case 2:
      var value = new error_pb.Error;
      reader.readMessage(value,error_pb.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openid4vci.CreateCredentialOfferResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openid4vci.CreateCredentialOfferResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openid4vci.CreateCredentialOfferResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openid4vci.CreateCredentialOfferResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccess();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.openid4vci.CreateCredentialOfferResponse.Success.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      error_pb.Error.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openid4vci.CreateCredentialOfferResponse.Success.prototype.toObject = function(opt_includeInstance) {
  return proto.openid4vci.CreateCredentialOfferResponse.Success.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openid4vci.CreateCredentialOfferResponse.Success} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openid4vci.CreateCredentialOfferResponse.Success.toObject = function(includeInstance, msg) {
  var f, obj = {
    credentialOffer: msg.getCredentialOffer_asB64(),
    credentialOfferUrl: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openid4vci.CreateCredentialOfferResponse.Success}
 */
proto.openid4vci.CreateCredentialOfferResponse.Success.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openid4vci.CreateCredentialOfferResponse.Success;
  return proto.openid4vci.CreateCredentialOfferResponse.Success.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openid4vci.CreateCredentialOfferResponse.Success} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openid4vci.CreateCredentialOfferResponse.Success}
 */
proto.openid4vci.CreateCredentialOfferResponse.Success.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setCredentialOffer(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCredentialOfferUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openid4vci.CreateCredentialOfferResponse.Success.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openid4vci.CreateCredentialOfferResponse.Success.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openid4vci.CreateCredentialOfferResponse.Success} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openid4vci.CreateCredentialOfferResponse.Success.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCredentialOffer_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getCredentialOfferUrl();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bytes credential_offer = 1;
 * @return {string}
 */
proto.openid4vci.CreateCredentialOfferResponse.Success.prototype.getCredentialOffer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes credential_offer = 1;
 * This is a type-conversion wrapper around `getCredentialOffer()`
 * @return {string}
 */
proto.openid4vci.CreateCredentialOfferResponse.Success.prototype.getCredentialOffer_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getCredentialOffer()));
};


/**
 * optional bytes credential_offer = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getCredentialOffer()`
 * @return {!Uint8Array}
 */
proto.openid4vci.CreateCredentialOfferResponse.Success.prototype.getCredentialOffer_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getCredentialOffer()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.openid4vci.CreateCredentialOfferResponse.Success} returns this
 */
proto.openid4vci.CreateCredentialOfferResponse.Success.prototype.setCredentialOffer = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional string credential_offer_url = 2;
 * @return {string}
 */
proto.openid4vci.CreateCredentialOfferResponse.Success.prototype.getCredentialOfferUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.openid4vci.CreateCredentialOfferResponse.Success} returns this
 */
proto.openid4vci.CreateCredentialOfferResponse.Success.prototype.setCredentialOfferUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Success success = 1;
 * @return {?proto.openid4vci.CreateCredentialOfferResponse.Success}
 */
proto.openid4vci.CreateCredentialOfferResponse.prototype.getSuccess = function() {
  return /** @type{?proto.openid4vci.CreateCredentialOfferResponse.Success} */ (
    jspb.Message.getWrapperField(this, proto.openid4vci.CreateCredentialOfferResponse.Success, 1));
};


/**
 * @param {?proto.openid4vci.CreateCredentialOfferResponse.Success|undefined} value
 * @return {!proto.openid4vci.CreateCredentialOfferResponse} returns this
*/
proto.openid4vci.CreateCredentialOfferResponse.prototype.setSuccess = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.openid4vci.CreateCredentialOfferResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openid4vci.CreateCredentialOfferResponse} returns this
 */
proto.openid4vci.CreateCredentialOfferResponse.prototype.clearSuccess = function() {
  return this.setSuccess(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openid4vci.CreateCredentialOfferResponse.prototype.hasSuccess = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Error error = 2;
 * @return {?proto.openid4vci.Error}
 */
proto.openid4vci.CreateCredentialOfferResponse.prototype.getError = function() {
  return /** @type{?proto.openid4vci.Error} */ (
    jspb.Message.getWrapperField(this, error_pb.Error, 2));
};


/**
 * @param {?proto.openid4vci.Error|undefined} value
 * @return {!proto.openid4vci.CreateCredentialOfferResponse} returns this
*/
proto.openid4vci.CreateCredentialOfferResponse.prototype.setError = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.openid4vci.CreateCredentialOfferResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openid4vci.CreateCredentialOfferResponse} returns this
 */
proto.openid4vci.CreateCredentialOfferResponse.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openid4vci.CreateCredentialOfferResponse.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openid4vci.PreEvaluateCredentialRequestRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openid4vci.PreEvaluateCredentialRequestRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openid4vci.PreEvaluateCredentialRequestRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openid4vci.PreEvaluateCredentialRequestRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    credentialRequest: msg.getCredentialRequest_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openid4vci.PreEvaluateCredentialRequestRequest}
 */
proto.openid4vci.PreEvaluateCredentialRequestRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openid4vci.PreEvaluateCredentialRequestRequest;
  return proto.openid4vci.PreEvaluateCredentialRequestRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openid4vci.PreEvaluateCredentialRequestRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openid4vci.PreEvaluateCredentialRequestRequest}
 */
proto.openid4vci.PreEvaluateCredentialRequestRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setCredentialRequest(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openid4vci.PreEvaluateCredentialRequestRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openid4vci.PreEvaluateCredentialRequestRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openid4vci.PreEvaluateCredentialRequestRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openid4vci.PreEvaluateCredentialRequestRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCredentialRequest_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes credential_request = 1;
 * @return {string}
 */
proto.openid4vci.PreEvaluateCredentialRequestRequest.prototype.getCredentialRequest = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes credential_request = 1;
 * This is a type-conversion wrapper around `getCredentialRequest()`
 * @return {string}
 */
proto.openid4vci.PreEvaluateCredentialRequestRequest.prototype.getCredentialRequest_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getCredentialRequest()));
};


/**
 * optional bytes credential_request = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getCredentialRequest()`
 * @return {!Uint8Array}
 */
proto.openid4vci.PreEvaluateCredentialRequestRequest.prototype.getCredentialRequest_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getCredentialRequest()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.openid4vci.PreEvaluateCredentialRequestRequest} returns this
 */
proto.openid4vci.PreEvaluateCredentialRequestRequest.prototype.setCredentialRequest = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.openid4vci.PreEvaluateCredentialRequestResponse.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.openid4vci.PreEvaluateCredentialRequestResponse.ResponseCase = {
  RESPONSE_NOT_SET: 0,
  SUCCESS: 1,
  ERROR: 2
};

/**
 * @return {proto.openid4vci.PreEvaluateCredentialRequestResponse.ResponseCase}
 */
proto.openid4vci.PreEvaluateCredentialRequestResponse.prototype.getResponseCase = function() {
  return /** @type {proto.openid4vci.PreEvaluateCredentialRequestResponse.ResponseCase} */(jspb.Message.computeOneofCase(this, proto.openid4vci.PreEvaluateCredentialRequestResponse.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openid4vci.PreEvaluateCredentialRequestResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openid4vci.PreEvaluateCredentialRequestResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openid4vci.PreEvaluateCredentialRequestResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openid4vci.PreEvaluateCredentialRequestResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    success: (f = msg.getSuccess()) && proto.openid4vci.PreEvaluateCredentialRequestResponse.Success.toObject(includeInstance, f),
    error: (f = msg.getError()) && error_pb.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openid4vci.PreEvaluateCredentialRequestResponse}
 */
proto.openid4vci.PreEvaluateCredentialRequestResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openid4vci.PreEvaluateCredentialRequestResponse;
  return proto.openid4vci.PreEvaluateCredentialRequestResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openid4vci.PreEvaluateCredentialRequestResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openid4vci.PreEvaluateCredentialRequestResponse}
 */
proto.openid4vci.PreEvaluateCredentialRequestResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.openid4vci.PreEvaluateCredentialRequestResponse.Success;
      reader.readMessage(value,proto.openid4vci.PreEvaluateCredentialRequestResponse.Success.deserializeBinaryFromReader);
      msg.setSuccess(value);
      break;
    case 2:
      var value = new error_pb.Error;
      reader.readMessage(value,error_pb.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openid4vci.PreEvaluateCredentialRequestResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openid4vci.PreEvaluateCredentialRequestResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openid4vci.PreEvaluateCredentialRequestResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openid4vci.PreEvaluateCredentialRequestResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccess();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.openid4vci.PreEvaluateCredentialRequestResponse.Success.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      error_pb.Error.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openid4vci.PreEvaluateCredentialRequestResponse.Success.prototype.toObject = function(opt_includeInstance) {
  return proto.openid4vci.PreEvaluateCredentialRequestResponse.Success.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openid4vci.PreEvaluateCredentialRequestResponse.Success} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openid4vci.PreEvaluateCredentialRequestResponse.Success.toObject = function(includeInstance, msg) {
  var f, obj = {
    did: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openid4vci.PreEvaluateCredentialRequestResponse.Success}
 */
proto.openid4vci.PreEvaluateCredentialRequestResponse.Success.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openid4vci.PreEvaluateCredentialRequestResponse.Success;
  return proto.openid4vci.PreEvaluateCredentialRequestResponse.Success.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openid4vci.PreEvaluateCredentialRequestResponse.Success} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openid4vci.PreEvaluateCredentialRequestResponse.Success}
 */
proto.openid4vci.PreEvaluateCredentialRequestResponse.Success.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openid4vci.PreEvaluateCredentialRequestResponse.Success.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openid4vci.PreEvaluateCredentialRequestResponse.Success.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openid4vci.PreEvaluateCredentialRequestResponse.Success} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openid4vci.PreEvaluateCredentialRequestResponse.Success.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string did = 1;
 * @return {string}
 */
proto.openid4vci.PreEvaluateCredentialRequestResponse.Success.prototype.getDid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openid4vci.PreEvaluateCredentialRequestResponse.Success} returns this
 */
proto.openid4vci.PreEvaluateCredentialRequestResponse.Success.prototype.setDid = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.openid4vci.PreEvaluateCredentialRequestResponse.Success} returns this
 */
proto.openid4vci.PreEvaluateCredentialRequestResponse.Success.prototype.clearDid = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openid4vci.PreEvaluateCredentialRequestResponse.Success.prototype.hasDid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Success success = 1;
 * @return {?proto.openid4vci.PreEvaluateCredentialRequestResponse.Success}
 */
proto.openid4vci.PreEvaluateCredentialRequestResponse.prototype.getSuccess = function() {
  return /** @type{?proto.openid4vci.PreEvaluateCredentialRequestResponse.Success} */ (
    jspb.Message.getWrapperField(this, proto.openid4vci.PreEvaluateCredentialRequestResponse.Success, 1));
};


/**
 * @param {?proto.openid4vci.PreEvaluateCredentialRequestResponse.Success|undefined} value
 * @return {!proto.openid4vci.PreEvaluateCredentialRequestResponse} returns this
*/
proto.openid4vci.PreEvaluateCredentialRequestResponse.prototype.setSuccess = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.openid4vci.PreEvaluateCredentialRequestResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openid4vci.PreEvaluateCredentialRequestResponse} returns this
 */
proto.openid4vci.PreEvaluateCredentialRequestResponse.prototype.clearSuccess = function() {
  return this.setSuccess(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openid4vci.PreEvaluateCredentialRequestResponse.prototype.hasSuccess = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Error error = 2;
 * @return {?proto.openid4vci.Error}
 */
proto.openid4vci.PreEvaluateCredentialRequestResponse.prototype.getError = function() {
  return /** @type{?proto.openid4vci.Error} */ (
    jspb.Message.getWrapperField(this, error_pb.Error, 2));
};


/**
 * @param {?proto.openid4vci.Error|undefined} value
 * @return {!proto.openid4vci.PreEvaluateCredentialRequestResponse} returns this
*/
proto.openid4vci.PreEvaluateCredentialRequestResponse.prototype.setError = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.openid4vci.PreEvaluateCredentialRequestResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openid4vci.PreEvaluateCredentialRequestResponse} returns this
 */
proto.openid4vci.PreEvaluateCredentialRequestResponse.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openid4vci.PreEvaluateCredentialRequestResponse.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openid4vci.EvaluateCredentialRequestRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openid4vci.EvaluateCredentialRequestRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openid4vci.EvaluateCredentialRequestRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openid4vci.EvaluateCredentialRequestRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    issuerMetadata: msg.getIssuerMetadata_asB64(),
    credentialRequest: msg.getCredentialRequest_asB64(),
    credentialOffer: msg.getCredentialOffer_asB64(),
    authorizationServerMetadata: msg.getAuthorizationServerMetadata_asB64(),
    didDocument: msg.getDidDocument_asB64(),
    evaluateCredentialRequestOptions: msg.getEvaluateCredentialRequestOptions_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openid4vci.EvaluateCredentialRequestRequest}
 */
proto.openid4vci.EvaluateCredentialRequestRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openid4vci.EvaluateCredentialRequestRequest;
  return proto.openid4vci.EvaluateCredentialRequestRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openid4vci.EvaluateCredentialRequestRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openid4vci.EvaluateCredentialRequestRequest}
 */
proto.openid4vci.EvaluateCredentialRequestRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setIssuerMetadata(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setCredentialRequest(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setCredentialOffer(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setAuthorizationServerMetadata(value);
      break;
    case 5:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setDidDocument(value);
      break;
    case 6:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setEvaluateCredentialRequestOptions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openid4vci.EvaluateCredentialRequestRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openid4vci.EvaluateCredentialRequestRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openid4vci.EvaluateCredentialRequestRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openid4vci.EvaluateCredentialRequestRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIssuerMetadata_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getCredentialRequest_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeBytes(
      3,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBytes(
      4,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeBytes(
      5,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeBytes(
      6,
      f
    );
  }
};


/**
 * optional bytes issuer_metadata = 1;
 * @return {string}
 */
proto.openid4vci.EvaluateCredentialRequestRequest.prototype.getIssuerMetadata = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes issuer_metadata = 1;
 * This is a type-conversion wrapper around `getIssuerMetadata()`
 * @return {string}
 */
proto.openid4vci.EvaluateCredentialRequestRequest.prototype.getIssuerMetadata_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getIssuerMetadata()));
};


/**
 * optional bytes issuer_metadata = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getIssuerMetadata()`
 * @return {!Uint8Array}
 */
proto.openid4vci.EvaluateCredentialRequestRequest.prototype.getIssuerMetadata_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getIssuerMetadata()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.openid4vci.EvaluateCredentialRequestRequest} returns this
 */
proto.openid4vci.EvaluateCredentialRequestRequest.prototype.setIssuerMetadata = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bytes credential_request = 2;
 * @return {string}
 */
proto.openid4vci.EvaluateCredentialRequestRequest.prototype.getCredentialRequest = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes credential_request = 2;
 * This is a type-conversion wrapper around `getCredentialRequest()`
 * @return {string}
 */
proto.openid4vci.EvaluateCredentialRequestRequest.prototype.getCredentialRequest_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getCredentialRequest()));
};


/**
 * optional bytes credential_request = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getCredentialRequest()`
 * @return {!Uint8Array}
 */
proto.openid4vci.EvaluateCredentialRequestRequest.prototype.getCredentialRequest_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getCredentialRequest()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.openid4vci.EvaluateCredentialRequestRequest} returns this
 */
proto.openid4vci.EvaluateCredentialRequestRequest.prototype.setCredentialRequest = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional bytes credential_offer = 3;
 * @return {string}
 */
proto.openid4vci.EvaluateCredentialRequestRequest.prototype.getCredentialOffer = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes credential_offer = 3;
 * This is a type-conversion wrapper around `getCredentialOffer()`
 * @return {string}
 */
proto.openid4vci.EvaluateCredentialRequestRequest.prototype.getCredentialOffer_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getCredentialOffer()));
};


/**
 * optional bytes credential_offer = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getCredentialOffer()`
 * @return {!Uint8Array}
 */
proto.openid4vci.EvaluateCredentialRequestRequest.prototype.getCredentialOffer_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getCredentialOffer()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.openid4vci.EvaluateCredentialRequestRequest} returns this
 */
proto.openid4vci.EvaluateCredentialRequestRequest.prototype.setCredentialOffer = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.openid4vci.EvaluateCredentialRequestRequest} returns this
 */
proto.openid4vci.EvaluateCredentialRequestRequest.prototype.clearCredentialOffer = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openid4vci.EvaluateCredentialRequestRequest.prototype.hasCredentialOffer = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bytes authorization_server_metadata = 4;
 * @return {string}
 */
proto.openid4vci.EvaluateCredentialRequestRequest.prototype.getAuthorizationServerMetadata = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes authorization_server_metadata = 4;
 * This is a type-conversion wrapper around `getAuthorizationServerMetadata()`
 * @return {string}
 */
proto.openid4vci.EvaluateCredentialRequestRequest.prototype.getAuthorizationServerMetadata_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getAuthorizationServerMetadata()));
};


/**
 * optional bytes authorization_server_metadata = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getAuthorizationServerMetadata()`
 * @return {!Uint8Array}
 */
proto.openid4vci.EvaluateCredentialRequestRequest.prototype.getAuthorizationServerMetadata_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getAuthorizationServerMetadata()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.openid4vci.EvaluateCredentialRequestRequest} returns this
 */
proto.openid4vci.EvaluateCredentialRequestRequest.prototype.setAuthorizationServerMetadata = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.openid4vci.EvaluateCredentialRequestRequest} returns this
 */
proto.openid4vci.EvaluateCredentialRequestRequest.prototype.clearAuthorizationServerMetadata = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openid4vci.EvaluateCredentialRequestRequest.prototype.hasAuthorizationServerMetadata = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional bytes did_document = 5;
 * @return {string}
 */
proto.openid4vci.EvaluateCredentialRequestRequest.prototype.getDidDocument = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * optional bytes did_document = 5;
 * This is a type-conversion wrapper around `getDidDocument()`
 * @return {string}
 */
proto.openid4vci.EvaluateCredentialRequestRequest.prototype.getDidDocument_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getDidDocument()));
};


/**
 * optional bytes did_document = 5;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getDidDocument()`
 * @return {!Uint8Array}
 */
proto.openid4vci.EvaluateCredentialRequestRequest.prototype.getDidDocument_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getDidDocument()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.openid4vci.EvaluateCredentialRequestRequest} returns this
 */
proto.openid4vci.EvaluateCredentialRequestRequest.prototype.setDidDocument = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.openid4vci.EvaluateCredentialRequestRequest} returns this
 */
proto.openid4vci.EvaluateCredentialRequestRequest.prototype.clearDidDocument = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openid4vci.EvaluateCredentialRequestRequest.prototype.hasDidDocument = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bytes evaluate_credential_request_options = 6;
 * @return {string}
 */
proto.openid4vci.EvaluateCredentialRequestRequest.prototype.getEvaluateCredentialRequestOptions = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * optional bytes evaluate_credential_request_options = 6;
 * This is a type-conversion wrapper around `getEvaluateCredentialRequestOptions()`
 * @return {string}
 */
proto.openid4vci.EvaluateCredentialRequestRequest.prototype.getEvaluateCredentialRequestOptions_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getEvaluateCredentialRequestOptions()));
};


/**
 * optional bytes evaluate_credential_request_options = 6;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getEvaluateCredentialRequestOptions()`
 * @return {!Uint8Array}
 */
proto.openid4vci.EvaluateCredentialRequestRequest.prototype.getEvaluateCredentialRequestOptions_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getEvaluateCredentialRequestOptions()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.openid4vci.EvaluateCredentialRequestRequest} returns this
 */
proto.openid4vci.EvaluateCredentialRequestRequest.prototype.setEvaluateCredentialRequestOptions = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.openid4vci.EvaluateCredentialRequestRequest} returns this
 */
proto.openid4vci.EvaluateCredentialRequestRequest.prototype.clearEvaluateCredentialRequestOptions = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openid4vci.EvaluateCredentialRequestRequest.prototype.hasEvaluateCredentialRequestOptions = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.openid4vci.EvaluateCredentialRequestResponse.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.openid4vci.EvaluateCredentialRequestResponse.ResponseCase = {
  RESPONSE_NOT_SET: 0,
  SUCCESS: 1,
  ERROR: 2
};

/**
 * @return {proto.openid4vci.EvaluateCredentialRequestResponse.ResponseCase}
 */
proto.openid4vci.EvaluateCredentialRequestResponse.prototype.getResponseCase = function() {
  return /** @type {proto.openid4vci.EvaluateCredentialRequestResponse.ResponseCase} */(jspb.Message.computeOneofCase(this, proto.openid4vci.EvaluateCredentialRequestResponse.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openid4vci.EvaluateCredentialRequestResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openid4vci.EvaluateCredentialRequestResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openid4vci.EvaluateCredentialRequestResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openid4vci.EvaluateCredentialRequestResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    success: (f = msg.getSuccess()) && proto.openid4vci.EvaluateCredentialRequestResponse.Success.toObject(includeInstance, f),
    error: (f = msg.getError()) && error_pb.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openid4vci.EvaluateCredentialRequestResponse}
 */
proto.openid4vci.EvaluateCredentialRequestResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openid4vci.EvaluateCredentialRequestResponse;
  return proto.openid4vci.EvaluateCredentialRequestResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openid4vci.EvaluateCredentialRequestResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openid4vci.EvaluateCredentialRequestResponse}
 */
proto.openid4vci.EvaluateCredentialRequestResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.openid4vci.EvaluateCredentialRequestResponse.Success;
      reader.readMessage(value,proto.openid4vci.EvaluateCredentialRequestResponse.Success.deserializeBinaryFromReader);
      msg.setSuccess(value);
      break;
    case 2:
      var value = new error_pb.Error;
      reader.readMessage(value,error_pb.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openid4vci.EvaluateCredentialRequestResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openid4vci.EvaluateCredentialRequestResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openid4vci.EvaluateCredentialRequestResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openid4vci.EvaluateCredentialRequestResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccess();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.openid4vci.EvaluateCredentialRequestResponse.Success.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      error_pb.Error.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openid4vci.EvaluateCredentialRequestResponse.Success.prototype.toObject = function(opt_includeInstance) {
  return proto.openid4vci.EvaluateCredentialRequestResponse.Success.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openid4vci.EvaluateCredentialRequestResponse.Success} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openid4vci.EvaluateCredentialRequestResponse.Success.toObject = function(includeInstance, msg) {
  var f, obj = {
    proofOfPossession: msg.getProofOfPossession_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openid4vci.EvaluateCredentialRequestResponse.Success}
 */
proto.openid4vci.EvaluateCredentialRequestResponse.Success.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openid4vci.EvaluateCredentialRequestResponse.Success;
  return proto.openid4vci.EvaluateCredentialRequestResponse.Success.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openid4vci.EvaluateCredentialRequestResponse.Success} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openid4vci.EvaluateCredentialRequestResponse.Success}
 */
proto.openid4vci.EvaluateCredentialRequestResponse.Success.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setProofOfPossession(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openid4vci.EvaluateCredentialRequestResponse.Success.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openid4vci.EvaluateCredentialRequestResponse.Success.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openid4vci.EvaluateCredentialRequestResponse.Success} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openid4vci.EvaluateCredentialRequestResponse.Success.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes proof_of_possession = 1;
 * @return {string}
 */
proto.openid4vci.EvaluateCredentialRequestResponse.Success.prototype.getProofOfPossession = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes proof_of_possession = 1;
 * This is a type-conversion wrapper around `getProofOfPossession()`
 * @return {string}
 */
proto.openid4vci.EvaluateCredentialRequestResponse.Success.prototype.getProofOfPossession_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getProofOfPossession()));
};


/**
 * optional bytes proof_of_possession = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getProofOfPossession()`
 * @return {!Uint8Array}
 */
proto.openid4vci.EvaluateCredentialRequestResponse.Success.prototype.getProofOfPossession_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getProofOfPossession()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.openid4vci.EvaluateCredentialRequestResponse.Success} returns this
 */
proto.openid4vci.EvaluateCredentialRequestResponse.Success.prototype.setProofOfPossession = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.openid4vci.EvaluateCredentialRequestResponse.Success} returns this
 */
proto.openid4vci.EvaluateCredentialRequestResponse.Success.prototype.clearProofOfPossession = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openid4vci.EvaluateCredentialRequestResponse.Success.prototype.hasProofOfPossession = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Success success = 1;
 * @return {?proto.openid4vci.EvaluateCredentialRequestResponse.Success}
 */
proto.openid4vci.EvaluateCredentialRequestResponse.prototype.getSuccess = function() {
  return /** @type{?proto.openid4vci.EvaluateCredentialRequestResponse.Success} */ (
    jspb.Message.getWrapperField(this, proto.openid4vci.EvaluateCredentialRequestResponse.Success, 1));
};


/**
 * @param {?proto.openid4vci.EvaluateCredentialRequestResponse.Success|undefined} value
 * @return {!proto.openid4vci.EvaluateCredentialRequestResponse} returns this
*/
proto.openid4vci.EvaluateCredentialRequestResponse.prototype.setSuccess = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.openid4vci.EvaluateCredentialRequestResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openid4vci.EvaluateCredentialRequestResponse} returns this
 */
proto.openid4vci.EvaluateCredentialRequestResponse.prototype.clearSuccess = function() {
  return this.setSuccess(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openid4vci.EvaluateCredentialRequestResponse.prototype.hasSuccess = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Error error = 2;
 * @return {?proto.openid4vci.Error}
 */
proto.openid4vci.EvaluateCredentialRequestResponse.prototype.getError = function() {
  return /** @type{?proto.openid4vci.Error} */ (
    jspb.Message.getWrapperField(this, error_pb.Error, 2));
};


/**
 * @param {?proto.openid4vci.Error|undefined} value
 * @return {!proto.openid4vci.EvaluateCredentialRequestResponse} returns this
*/
proto.openid4vci.EvaluateCredentialRequestResponse.prototype.setError = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.openid4vci.EvaluateCredentialRequestResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openid4vci.EvaluateCredentialRequestResponse} returns this
 */
proto.openid4vci.EvaluateCredentialRequestResponse.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openid4vci.EvaluateCredentialRequestResponse.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openid4vci.CreateCredentialSuccessResponseRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openid4vci.CreateCredentialSuccessResponseRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openid4vci.CreateCredentialSuccessResponseRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openid4vci.CreateCredentialSuccessResponseRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    credentialRequest: msg.getCredentialRequest_asB64(),
    credential: msg.getCredential_asB64(),
    acceptanceToken: jspb.Message.getFieldWithDefault(msg, 3, ""),
    cNonce: jspb.Message.getFieldWithDefault(msg, 4, ""),
    cNonceExpiresIn: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openid4vci.CreateCredentialSuccessResponseRequest}
 */
proto.openid4vci.CreateCredentialSuccessResponseRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openid4vci.CreateCredentialSuccessResponseRequest;
  return proto.openid4vci.CreateCredentialSuccessResponseRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openid4vci.CreateCredentialSuccessResponseRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openid4vci.CreateCredentialSuccessResponseRequest}
 */
proto.openid4vci.CreateCredentialSuccessResponseRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setCredentialRequest(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setCredential(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAcceptanceToken(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCNonce(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCNonceExpiresIn(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openid4vci.CreateCredentialSuccessResponseRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openid4vci.CreateCredentialSuccessResponseRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openid4vci.CreateCredentialSuccessResponseRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openid4vci.CreateCredentialSuccessResponseRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCredentialRequest_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint32(
      5,
      f
    );
  }
};


/**
 * optional bytes credential_request = 1;
 * @return {string}
 */
proto.openid4vci.CreateCredentialSuccessResponseRequest.prototype.getCredentialRequest = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes credential_request = 1;
 * This is a type-conversion wrapper around `getCredentialRequest()`
 * @return {string}
 */
proto.openid4vci.CreateCredentialSuccessResponseRequest.prototype.getCredentialRequest_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getCredentialRequest()));
};


/**
 * optional bytes credential_request = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getCredentialRequest()`
 * @return {!Uint8Array}
 */
proto.openid4vci.CreateCredentialSuccessResponseRequest.prototype.getCredentialRequest_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getCredentialRequest()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.openid4vci.CreateCredentialSuccessResponseRequest} returns this
 */
proto.openid4vci.CreateCredentialSuccessResponseRequest.prototype.setCredentialRequest = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional bytes credential = 2;
 * @return {string}
 */
proto.openid4vci.CreateCredentialSuccessResponseRequest.prototype.getCredential = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes credential = 2;
 * This is a type-conversion wrapper around `getCredential()`
 * @return {string}
 */
proto.openid4vci.CreateCredentialSuccessResponseRequest.prototype.getCredential_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getCredential()));
};


/**
 * optional bytes credential = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getCredential()`
 * @return {!Uint8Array}
 */
proto.openid4vci.CreateCredentialSuccessResponseRequest.prototype.getCredential_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getCredential()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.openid4vci.CreateCredentialSuccessResponseRequest} returns this
 */
proto.openid4vci.CreateCredentialSuccessResponseRequest.prototype.setCredential = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.openid4vci.CreateCredentialSuccessResponseRequest} returns this
 */
proto.openid4vci.CreateCredentialSuccessResponseRequest.prototype.clearCredential = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openid4vci.CreateCredentialSuccessResponseRequest.prototype.hasCredential = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string acceptance_token = 3;
 * @return {string}
 */
proto.openid4vci.CreateCredentialSuccessResponseRequest.prototype.getAcceptanceToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.openid4vci.CreateCredentialSuccessResponseRequest} returns this
 */
proto.openid4vci.CreateCredentialSuccessResponseRequest.prototype.setAcceptanceToken = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.openid4vci.CreateCredentialSuccessResponseRequest} returns this
 */
proto.openid4vci.CreateCredentialSuccessResponseRequest.prototype.clearAcceptanceToken = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openid4vci.CreateCredentialSuccessResponseRequest.prototype.hasAcceptanceToken = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string c_nonce = 4;
 * @return {string}
 */
proto.openid4vci.CreateCredentialSuccessResponseRequest.prototype.getCNonce = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.openid4vci.CreateCredentialSuccessResponseRequest} returns this
 */
proto.openid4vci.CreateCredentialSuccessResponseRequest.prototype.setCNonce = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.openid4vci.CreateCredentialSuccessResponseRequest} returns this
 */
proto.openid4vci.CreateCredentialSuccessResponseRequest.prototype.clearCNonce = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openid4vci.CreateCredentialSuccessResponseRequest.prototype.hasCNonce = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint32 c_nonce_expires_in = 5;
 * @return {number}
 */
proto.openid4vci.CreateCredentialSuccessResponseRequest.prototype.getCNonceExpiresIn = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.openid4vci.CreateCredentialSuccessResponseRequest} returns this
 */
proto.openid4vci.CreateCredentialSuccessResponseRequest.prototype.setCNonceExpiresIn = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.openid4vci.CreateCredentialSuccessResponseRequest} returns this
 */
proto.openid4vci.CreateCredentialSuccessResponseRequest.prototype.clearCNonceExpiresIn = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openid4vci.CreateCredentialSuccessResponseRequest.prototype.hasCNonceExpiresIn = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.openid4vci.CreateCredentialSuccessResponseResponse.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.openid4vci.CreateCredentialSuccessResponseResponse.ResponseCase = {
  RESPONSE_NOT_SET: 0,
  SUCCESS: 1,
  ERROR: 2
};

/**
 * @return {proto.openid4vci.CreateCredentialSuccessResponseResponse.ResponseCase}
 */
proto.openid4vci.CreateCredentialSuccessResponseResponse.prototype.getResponseCase = function() {
  return /** @type {proto.openid4vci.CreateCredentialSuccessResponseResponse.ResponseCase} */(jspb.Message.computeOneofCase(this, proto.openid4vci.CreateCredentialSuccessResponseResponse.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openid4vci.CreateCredentialSuccessResponseResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openid4vci.CreateCredentialSuccessResponseResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openid4vci.CreateCredentialSuccessResponseResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openid4vci.CreateCredentialSuccessResponseResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    success: (f = msg.getSuccess()) && proto.openid4vci.CreateCredentialSuccessResponseResponse.Success.toObject(includeInstance, f),
    error: (f = msg.getError()) && error_pb.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openid4vci.CreateCredentialSuccessResponseResponse}
 */
proto.openid4vci.CreateCredentialSuccessResponseResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openid4vci.CreateCredentialSuccessResponseResponse;
  return proto.openid4vci.CreateCredentialSuccessResponseResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openid4vci.CreateCredentialSuccessResponseResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openid4vci.CreateCredentialSuccessResponseResponse}
 */
proto.openid4vci.CreateCredentialSuccessResponseResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.openid4vci.CreateCredentialSuccessResponseResponse.Success;
      reader.readMessage(value,proto.openid4vci.CreateCredentialSuccessResponseResponse.Success.deserializeBinaryFromReader);
      msg.setSuccess(value);
      break;
    case 2:
      var value = new error_pb.Error;
      reader.readMessage(value,error_pb.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openid4vci.CreateCredentialSuccessResponseResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openid4vci.CreateCredentialSuccessResponseResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openid4vci.CreateCredentialSuccessResponseResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openid4vci.CreateCredentialSuccessResponseResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccess();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.openid4vci.CreateCredentialSuccessResponseResponse.Success.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      error_pb.Error.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openid4vci.CreateCredentialSuccessResponseResponse.Success.prototype.toObject = function(opt_includeInstance) {
  return proto.openid4vci.CreateCredentialSuccessResponseResponse.Success.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openid4vci.CreateCredentialSuccessResponseResponse.Success} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openid4vci.CreateCredentialSuccessResponseResponse.Success.toObject = function(includeInstance, msg) {
  var f, obj = {
    successResponse: msg.getSuccessResponse_asB64(),
    createdAt: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openid4vci.CreateCredentialSuccessResponseResponse.Success}
 */
proto.openid4vci.CreateCredentialSuccessResponseResponse.Success.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openid4vci.CreateCredentialSuccessResponseResponse.Success;
  return proto.openid4vci.CreateCredentialSuccessResponseResponse.Success.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openid4vci.CreateCredentialSuccessResponseResponse.Success} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openid4vci.CreateCredentialSuccessResponseResponse.Success}
 */
proto.openid4vci.CreateCredentialSuccessResponseResponse.Success.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setSuccessResponse(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openid4vci.CreateCredentialSuccessResponseResponse.Success.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openid4vci.CreateCredentialSuccessResponseResponse.Success.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openid4vci.CreateCredentialSuccessResponseResponse.Success} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openid4vci.CreateCredentialSuccessResponseResponse.Success.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccessResponse_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
  f = message.getCreatedAt();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional bytes success_response = 1;
 * @return {string}
 */
proto.openid4vci.CreateCredentialSuccessResponseResponse.Success.prototype.getSuccessResponse = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes success_response = 1;
 * This is a type-conversion wrapper around `getSuccessResponse()`
 * @return {string}
 */
proto.openid4vci.CreateCredentialSuccessResponseResponse.Success.prototype.getSuccessResponse_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getSuccessResponse()));
};


/**
 * optional bytes success_response = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getSuccessResponse()`
 * @return {!Uint8Array}
 */
proto.openid4vci.CreateCredentialSuccessResponseResponse.Success.prototype.getSuccessResponse_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getSuccessResponse()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.openid4vci.CreateCredentialSuccessResponseResponse.Success} returns this
 */
proto.openid4vci.CreateCredentialSuccessResponseResponse.Success.prototype.setSuccessResponse = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional string created_at = 2;
 * @return {string}
 */
proto.openid4vci.CreateCredentialSuccessResponseResponse.Success.prototype.getCreatedAt = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.openid4vci.CreateCredentialSuccessResponseResponse.Success} returns this
 */
proto.openid4vci.CreateCredentialSuccessResponseResponse.Success.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Success success = 1;
 * @return {?proto.openid4vci.CreateCredentialSuccessResponseResponse.Success}
 */
proto.openid4vci.CreateCredentialSuccessResponseResponse.prototype.getSuccess = function() {
  return /** @type{?proto.openid4vci.CreateCredentialSuccessResponseResponse.Success} */ (
    jspb.Message.getWrapperField(this, proto.openid4vci.CreateCredentialSuccessResponseResponse.Success, 1));
};


/**
 * @param {?proto.openid4vci.CreateCredentialSuccessResponseResponse.Success|undefined} value
 * @return {!proto.openid4vci.CreateCredentialSuccessResponseResponse} returns this
*/
proto.openid4vci.CreateCredentialSuccessResponseResponse.prototype.setSuccess = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.openid4vci.CreateCredentialSuccessResponseResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openid4vci.CreateCredentialSuccessResponseResponse} returns this
 */
proto.openid4vci.CreateCredentialSuccessResponseResponse.prototype.clearSuccess = function() {
  return this.setSuccess(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openid4vci.CreateCredentialSuccessResponseResponse.prototype.hasSuccess = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Error error = 2;
 * @return {?proto.openid4vci.Error}
 */
proto.openid4vci.CreateCredentialSuccessResponseResponse.prototype.getError = function() {
  return /** @type{?proto.openid4vci.Error} */ (
    jspb.Message.getWrapperField(this, error_pb.Error, 2));
};


/**
 * @param {?proto.openid4vci.Error|undefined} value
 * @return {!proto.openid4vci.CreateCredentialSuccessResponseResponse} returns this
*/
proto.openid4vci.CreateCredentialSuccessResponseResponse.prototype.setError = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.openid4vci.CreateCredentialSuccessResponseResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openid4vci.CreateCredentialSuccessResponseResponse} returns this
 */
proto.openid4vci.CreateCredentialSuccessResponseResponse.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openid4vci.CreateCredentialSuccessResponseResponse.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openid4vci.CreateCredentialErrorResponseRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.openid4vci.CreateCredentialErrorResponseRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openid4vci.CreateCredentialErrorResponseRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openid4vci.CreateCredentialErrorResponseRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    error: jspb.Message.getFieldWithDefault(msg, 1, ""),
    errorDescription: jspb.Message.getFieldWithDefault(msg, 2, ""),
    errorUri: jspb.Message.getFieldWithDefault(msg, 3, ""),
    errorAdditionalDetails: msg.getErrorAdditionalDetails_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openid4vci.CreateCredentialErrorResponseRequest}
 */
proto.openid4vci.CreateCredentialErrorResponseRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openid4vci.CreateCredentialErrorResponseRequest;
  return proto.openid4vci.CreateCredentialErrorResponseRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openid4vci.CreateCredentialErrorResponseRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openid4vci.CreateCredentialErrorResponseRequest}
 */
proto.openid4vci.CreateCredentialErrorResponseRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setError(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrorDescription(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrorUri(value);
      break;
    case 4:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setErrorAdditionalDetails(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openid4vci.CreateCredentialErrorResponseRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openid4vci.CreateCredentialErrorResponseRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openid4vci.CreateCredentialErrorResponseRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openid4vci.CreateCredentialErrorResponseRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getError();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {!(string|Uint8Array)} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBytes(
      4,
      f
    );
  }
};


/**
 * optional string error = 1;
 * @return {string}
 */
proto.openid4vci.CreateCredentialErrorResponseRequest.prototype.getError = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.openid4vci.CreateCredentialErrorResponseRequest} returns this
 */
proto.openid4vci.CreateCredentialErrorResponseRequest.prototype.setError = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string error_description = 2;
 * @return {string}
 */
proto.openid4vci.CreateCredentialErrorResponseRequest.prototype.getErrorDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.openid4vci.CreateCredentialErrorResponseRequest} returns this
 */
proto.openid4vci.CreateCredentialErrorResponseRequest.prototype.setErrorDescription = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.openid4vci.CreateCredentialErrorResponseRequest} returns this
 */
proto.openid4vci.CreateCredentialErrorResponseRequest.prototype.clearErrorDescription = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openid4vci.CreateCredentialErrorResponseRequest.prototype.hasErrorDescription = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string error_uri = 3;
 * @return {string}
 */
proto.openid4vci.CreateCredentialErrorResponseRequest.prototype.getErrorUri = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.openid4vci.CreateCredentialErrorResponseRequest} returns this
 */
proto.openid4vci.CreateCredentialErrorResponseRequest.prototype.setErrorUri = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.openid4vci.CreateCredentialErrorResponseRequest} returns this
 */
proto.openid4vci.CreateCredentialErrorResponseRequest.prototype.clearErrorUri = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openid4vci.CreateCredentialErrorResponseRequest.prototype.hasErrorUri = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bytes error_additional_details = 4;
 * @return {string}
 */
proto.openid4vci.CreateCredentialErrorResponseRequest.prototype.getErrorAdditionalDetails = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * optional bytes error_additional_details = 4;
 * This is a type-conversion wrapper around `getErrorAdditionalDetails()`
 * @return {string}
 */
proto.openid4vci.CreateCredentialErrorResponseRequest.prototype.getErrorAdditionalDetails_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getErrorAdditionalDetails()));
};


/**
 * optional bytes error_additional_details = 4;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getErrorAdditionalDetails()`
 * @return {!Uint8Array}
 */
proto.openid4vci.CreateCredentialErrorResponseRequest.prototype.getErrorAdditionalDetails_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getErrorAdditionalDetails()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.openid4vci.CreateCredentialErrorResponseRequest} returns this
 */
proto.openid4vci.CreateCredentialErrorResponseRequest.prototype.setErrorAdditionalDetails = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.openid4vci.CreateCredentialErrorResponseRequest} returns this
 */
proto.openid4vci.CreateCredentialErrorResponseRequest.prototype.clearErrorAdditionalDetails = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openid4vci.CreateCredentialErrorResponseRequest.prototype.hasErrorAdditionalDetails = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.openid4vci.CreateCredentialErrorResponseResponse.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.openid4vci.CreateCredentialErrorResponseResponse.ResponseCase = {
  RESPONSE_NOT_SET: 0,
  SUCCESS: 1,
  ERROR: 2
};

/**
 * @return {proto.openid4vci.CreateCredentialErrorResponseResponse.ResponseCase}
 */
proto.openid4vci.CreateCredentialErrorResponseResponse.prototype.getResponseCase = function() {
  return /** @type {proto.openid4vci.CreateCredentialErrorResponseResponse.ResponseCase} */(jspb.Message.computeOneofCase(this, proto.openid4vci.CreateCredentialErrorResponseResponse.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openid4vci.CreateCredentialErrorResponseResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.openid4vci.CreateCredentialErrorResponseResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openid4vci.CreateCredentialErrorResponseResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openid4vci.CreateCredentialErrorResponseResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    success: (f = msg.getSuccess()) && proto.openid4vci.CreateCredentialErrorResponseResponse.Success.toObject(includeInstance, f),
    error: (f = msg.getError()) && error_pb.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openid4vci.CreateCredentialErrorResponseResponse}
 */
proto.openid4vci.CreateCredentialErrorResponseResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openid4vci.CreateCredentialErrorResponseResponse;
  return proto.openid4vci.CreateCredentialErrorResponseResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openid4vci.CreateCredentialErrorResponseResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openid4vci.CreateCredentialErrorResponseResponse}
 */
proto.openid4vci.CreateCredentialErrorResponseResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.openid4vci.CreateCredentialErrorResponseResponse.Success;
      reader.readMessage(value,proto.openid4vci.CreateCredentialErrorResponseResponse.Success.deserializeBinaryFromReader);
      msg.setSuccess(value);
      break;
    case 2:
      var value = new error_pb.Error;
      reader.readMessage(value,error_pb.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openid4vci.CreateCredentialErrorResponseResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openid4vci.CreateCredentialErrorResponseResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openid4vci.CreateCredentialErrorResponseResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openid4vci.CreateCredentialErrorResponseResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccess();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.openid4vci.CreateCredentialErrorResponseResponse.Success.serializeBinaryToWriter
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      error_pb.Error.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.openid4vci.CreateCredentialErrorResponseResponse.Success.prototype.toObject = function(opt_includeInstance) {
  return proto.openid4vci.CreateCredentialErrorResponseResponse.Success.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.openid4vci.CreateCredentialErrorResponseResponse.Success} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openid4vci.CreateCredentialErrorResponseResponse.Success.toObject = function(includeInstance, msg) {
  var f, obj = {
    errorResponse: msg.getErrorResponse_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.openid4vci.CreateCredentialErrorResponseResponse.Success}
 */
proto.openid4vci.CreateCredentialErrorResponseResponse.Success.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.openid4vci.CreateCredentialErrorResponseResponse.Success;
  return proto.openid4vci.CreateCredentialErrorResponseResponse.Success.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.openid4vci.CreateCredentialErrorResponseResponse.Success} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.openid4vci.CreateCredentialErrorResponseResponse.Success}
 */
proto.openid4vci.CreateCredentialErrorResponseResponse.Success.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setErrorResponse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.openid4vci.CreateCredentialErrorResponseResponse.Success.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.openid4vci.CreateCredentialErrorResponseResponse.Success.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.openid4vci.CreateCredentialErrorResponseResponse.Success} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.openid4vci.CreateCredentialErrorResponseResponse.Success.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getErrorResponse_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      1,
      f
    );
  }
};


/**
 * optional bytes error_response = 1;
 * @return {string}
 */
proto.openid4vci.CreateCredentialErrorResponseResponse.Success.prototype.getErrorResponse = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * optional bytes error_response = 1;
 * This is a type-conversion wrapper around `getErrorResponse()`
 * @return {string}
 */
proto.openid4vci.CreateCredentialErrorResponseResponse.Success.prototype.getErrorResponse_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getErrorResponse()));
};


/**
 * optional bytes error_response = 1;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getErrorResponse()`
 * @return {!Uint8Array}
 */
proto.openid4vci.CreateCredentialErrorResponseResponse.Success.prototype.getErrorResponse_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getErrorResponse()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.openid4vci.CreateCredentialErrorResponseResponse.Success} returns this
 */
proto.openid4vci.CreateCredentialErrorResponseResponse.Success.prototype.setErrorResponse = function(value) {
  return jspb.Message.setProto3BytesField(this, 1, value);
};


/**
 * optional Success success = 1;
 * @return {?proto.openid4vci.CreateCredentialErrorResponseResponse.Success}
 */
proto.openid4vci.CreateCredentialErrorResponseResponse.prototype.getSuccess = function() {
  return /** @type{?proto.openid4vci.CreateCredentialErrorResponseResponse.Success} */ (
    jspb.Message.getWrapperField(this, proto.openid4vci.CreateCredentialErrorResponseResponse.Success, 1));
};


/**
 * @param {?proto.openid4vci.CreateCredentialErrorResponseResponse.Success|undefined} value
 * @return {!proto.openid4vci.CreateCredentialErrorResponseResponse} returns this
*/
proto.openid4vci.CreateCredentialErrorResponseResponse.prototype.setSuccess = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.openid4vci.CreateCredentialErrorResponseResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openid4vci.CreateCredentialErrorResponseResponse} returns this
 */
proto.openid4vci.CreateCredentialErrorResponseResponse.prototype.clearSuccess = function() {
  return this.setSuccess(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openid4vci.CreateCredentialErrorResponseResponse.prototype.hasSuccess = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Error error = 2;
 * @return {?proto.openid4vci.Error}
 */
proto.openid4vci.CreateCredentialErrorResponseResponse.prototype.getError = function() {
  return /** @type{?proto.openid4vci.Error} */ (
    jspb.Message.getWrapperField(this, error_pb.Error, 2));
};


/**
 * @param {?proto.openid4vci.Error|undefined} value
 * @return {!proto.openid4vci.CreateCredentialErrorResponseResponse} returns this
*/
proto.openid4vci.CreateCredentialErrorResponseResponse.prototype.setError = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.openid4vci.CreateCredentialErrorResponseResponse.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.openid4vci.CreateCredentialErrorResponseResponse} returns this
 */
proto.openid4vci.CreateCredentialErrorResponseResponse.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.openid4vci.CreateCredentialErrorResponseResponse.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};


goog.object.extend(exports, proto.openid4vci);
